// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0--rc1
// source: node_link.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateNodeLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Magnitude     *uint32                `protobuf:"varint,1,opt,name=Magnitude,proto3,oneof" json:"Magnitude,omitempty"`
	Description   *string                `protobuf:"bytes,2,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
	Colour        *string                `protobuf:"bytes,3,opt,name=colour,proto3,oneof" json:"colour,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeLinkRequest) Reset() {
	*x = UpdateNodeLinkRequest{}
	mi := &file_node_link_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeLinkRequest) ProtoMessage() {}

func (x *UpdateNodeLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_link_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeLinkRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_link_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateNodeLinkRequest) GetMagnitude() uint32 {
	if x != nil && x.Magnitude != nil {
		return *x.Magnitude
	}
	return 0
}

func (x *UpdateNodeLinkRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateNodeLinkRequest) GetColour() string {
	if x != nil && x.Colour != nil {
		return *x.Colour
	}
	return ""
}

type CreateNodeLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        int32                  `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	LinkId        int32                  `protobuf:"varint,2,opt,name=linkId,proto3" json:"linkId,omitempty"`
	Description   *string                `protobuf:"bytes,6,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
	Magnitude     *uint32                `protobuf:"varint,4,opt,name=Magnitude,proto3,oneof" json:"Magnitude,omitempty"`
	Colour        *string                `protobuf:"bytes,5,opt,name=colour,proto3,oneof" json:"colour,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeLinkRequest) Reset() {
	*x = CreateNodeLinkRequest{}
	mi := &file_node_link_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeLinkRequest) ProtoMessage() {}

func (x *CreateNodeLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_link_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeLinkRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_link_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNodeLinkRequest) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *CreateNodeLinkRequest) GetLinkId() int32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *CreateNodeLinkRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateNodeLinkRequest) GetMagnitude() uint32 {
	if x != nil && x.Magnitude != nil {
		return *x.Magnitude
	}
	return 0
}

func (x *CreateNodeLinkRequest) GetColour() string {
	if x != nil && x.Colour != nil {
		return *x.Colour
	}
	return ""
}

type NodeLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeId        int32                  `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	LinkId        int32                  `protobuf:"varint,3,opt,name=linkId,proto3" json:"linkId,omitempty"`
	Description   *string                `protobuf:"bytes,4,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
	Magnitude     *uint32                `protobuf:"varint,5,opt,name=Magnitude,proto3,oneof" json:"Magnitude,omitempty"`
	Colour        *string                `protobuf:"bytes,6,opt,name=colour,proto3,oneof" json:"colour,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeLinkResponse) Reset() {
	*x = NodeLinkResponse{}
	mi := &file_node_link_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLinkResponse) ProtoMessage() {}

func (x *NodeLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_link_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLinkResponse.ProtoReflect.Descriptor instead.
func (*NodeLinkResponse) Descriptor() ([]byte, []int) {
	return file_node_link_proto_rawDescGZIP(), []int{2}
}

func (x *NodeLinkResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeLinkResponse) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeLinkResponse) GetLinkId() int32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *NodeLinkResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NodeLinkResponse) GetMagnitude() uint32 {
	if x != nil && x.Magnitude != nil {
		return *x.Magnitude
	}
	return 0
}

func (x *NodeLinkResponse) GetColour() string {
	if x != nil && x.Colour != nil {
		return *x.Colour
	}
	return ""
}

type MultipleNodeLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*NodeLinkResponse    `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipleNodeLinkResponse) Reset() {
	*x = MultipleNodeLinkResponse{}
	mi := &file_node_link_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipleNodeLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleNodeLinkResponse) ProtoMessage() {}

func (x *MultipleNodeLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_link_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleNodeLinkResponse.ProtoReflect.Descriptor instead.
func (*MultipleNodeLinkResponse) Descriptor() ([]byte, []int) {
	return file_node_link_proto_rawDescGZIP(), []int{3}
}

func (x *MultipleNodeLinkResponse) GetLinks() []*NodeLinkResponse {
	if x != nil {
		return x.Links
	}
	return nil
}

type SingleNodeLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleNodeLinkRequest) Reset() {
	*x = SingleNodeLinkRequest{}
	mi := &file_node_link_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleNodeLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleNodeLinkRequest) ProtoMessage() {}

func (x *SingleNodeLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_link_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleNodeLinkRequest.ProtoReflect.Descriptor instead.
func (*SingleNodeLinkRequest) Descriptor() ([]byte, []int) {
	return file_node_link_proto_rawDescGZIP(), []int{4}
}

func (x *SingleNodeLinkRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_node_link_proto protoreflect.FileDescriptor

var file_node_link_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x4d, 0x61, 0x67, 0x6e, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x09, 0x4d, 0x61,
	0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x4d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x4d, 0x61, 0x67, 0x6e,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x09, 0x4d,
	0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x4d, 0x61, 0x67,
	0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x75,
	0x72, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x4d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x01, 0x52, 0x09, 0x4d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x4d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x22, 0x43, 0x0a, 0x18, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x32, 0xf6, 0x01, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_node_link_proto_rawDescOnce sync.Once
	file_node_link_proto_rawDescData []byte
)

func file_node_link_proto_rawDescGZIP() []byte {
	file_node_link_proto_rawDescOnce.Do(func() {
		file_node_link_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_node_link_proto_rawDesc), len(file_node_link_proto_rawDesc)))
	})
	return file_node_link_proto_rawDescData
}

var file_node_link_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_node_link_proto_goTypes = []any{
	(*UpdateNodeLinkRequest)(nil),    // 0: UpdateNodeLinkRequest
	(*CreateNodeLinkRequest)(nil),    // 1: CreateNodeLinkRequest
	(*NodeLinkResponse)(nil),         // 2: NodeLinkResponse
	(*MultipleNodeLinkResponse)(nil), // 3: MultipleNodeLinkResponse
	(*SingleNodeLinkRequest)(nil),    // 4: SingleNodeLinkRequest
	(*SuccessResponse)(nil),          // 5: SuccessResponse
}
var file_node_link_proto_depIdxs = []int32{
	2, // 0: MultipleNodeLinkResponse.links:type_name -> NodeLinkResponse
	1, // 1: NodeLinkService.Create:input_type -> CreateNodeLinkRequest
	4, // 2: NodeLinkService.Delete:input_type -> SingleNodeLinkRequest
	0, // 3: NodeLinkService.Update:input_type -> UpdateNodeLinkRequest
	4, // 4: NodeLinkService.FindLinkedByNodeId:input_type -> SingleNodeLinkRequest
	5, // 5: NodeLinkService.Create:output_type -> SuccessResponse
	5, // 6: NodeLinkService.Delete:output_type -> SuccessResponse
	5, // 7: NodeLinkService.Update:output_type -> SuccessResponse
	3, // 8: NodeLinkService.FindLinkedByNodeId:output_type -> MultipleNodeLinkResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_node_link_proto_init() }
func file_node_link_proto_init() {
	if File_node_link_proto != nil {
		return
	}
	file_node_proto_init()
	file_node_link_proto_msgTypes[0].OneofWrappers = []any{}
	file_node_link_proto_msgTypes[1].OneofWrappers = []any{}
	file_node_link_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_node_link_proto_rawDesc), len(file_node_link_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_link_proto_goTypes,
		DependencyIndexes: file_node_link_proto_depIdxs,
		MessageInfos:      file_node_link_proto_msgTypes,
	}.Build()
	File_node_link_proto = out.File
	file_node_link_proto_goTypes = nil
	file_node_link_proto_depIdxs = nil
}
